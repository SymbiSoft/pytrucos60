#######################################################
# 
# jogadorCPU.py
# Python implementation of the Class JogadorCPU
# Generated by Enterprise Architect
# Created on:      29-jul-2011 22:35:00
# Original author: Wander Jardim
# 
#######################################################

import Jogador

class JogadorCPU(Jogador):
    def __init__ (self, nome, num):
        self.numero = num
        self.nome = nome
    
    def envia_comando(self, cmd):
        try:           
            self.cmd = json.read(cmd)
        except:
            self.cmd = cmd
        print "Jogador: %s - Enviou: %s" % (self.nome, cmd)

    def envia_comandoJS(self, cmd):
        try:           
            self.cmd = json.read(cmd)
        except:
            self.cmd = cmd
        print "Jogador: %s - Recebeu o comando: %s" % (self.nome, cmd)


    def recebe_comandoJS(self):
        
        carta = {'xxx':'xxx'}
        resp = carta
        if self.cmd:
            if 'vez' in self.cmd:
                if self.cmd['vez'] == 'sua':
                    if self.mao:
                        cartaInstance = self.mao[randrange(0, len(self.mao))]
                        carta = {"carta": cartaInstance.valorBT}
                        resp = carta
                    else:
                        print "Eu %s não tenho mais cartas!" % self.nome
            if 'cartas' in self.cmd:
                resp =  {'OK':'Cartas Recebidas'}
            
            if 'fim' in self.cmd:
                resp =  {'OK':'Fim Mao'}
            
            if 'truco' in self.cmd:
                if self.cmd['truco'] == 'aceita?':
                    resp =  sim
            
        
        self.cmd = None
        print "Jogador %s enviou o comando %s." % (self.nome, resp)
        return resp

    def recebe_comando(self):
        
        carta = {'xxx':'xxx'}
        resp = carta
        if self.cmd:
            if 'vez' in self.cmd:
                if self.cmd['vez'] == 'sua':
                    if self.mao:
                        cartaInstance = self.mao[randrange(0, len(self.mao))]
                        resp = {"carta": cartaInstance.valorBT}
                    else:
                        print "Eu %s não tenho mais cartas!" % self.nome
            if 'truco' in self.cmd:
                if self.cmd['truco'] == 'aceita?':
                    opcoes = ['sim', 'nao']
                    resp =  opcoes[randrange(0,len(opcoes))]
                    
        self.cmd = None
        
        return resp


    def formata_cartas_BT(self):
        cartaBT = []
        for carta in self.mao:
            cartaBT.append(carta.valorBT)
            
        return "cartas:" + "/".join(cartaBT)