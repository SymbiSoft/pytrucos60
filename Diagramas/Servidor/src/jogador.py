#######################################################
# 
# jogador.py
# Python implementation of the Class Jogador
# Generated by Enterprise Architect
# Created on:      29-jul-2011 21:25:27
# Original author: Wander Jardim
# 
#######################################################


class Jogador(object):
    """Objeto Jogador
    """
    nome = "None"
    __numero = None
    mao = []
    __equipe = None
    __pontos = 0
    ehRemoto = False
    sock = None
    info = None
    vezDeJogar = False
    ganhadorUltimaRodada = False
    iniciouUltimaPartida = False

    def __repr__(self):
        return self.nome
        
        
    def run(self):
        self.jogadores = self.conecta_jogadores()

    def setPontos(self, pontos):
        self.__pontos = pontos
    
    def getPontos(self):
        return self.__pontos

    def setEquipe(self, equipe):
        self.__equipe = equipe
    
    def getEquipe(self):
        return self.__equipe 
    
    def setNumero(self, numero):
        self.__numero = numero

    def getNumero(self):
        return self.__numero 

    def  limparCartas(self):
        self.mao = []

    def receberCarta(self, carta):
        self.mao.append(carta)

    def verCartas(self):
        var = self.mao
        return var

    def jogarCarta(self, num):
        var = self.mao[num]
        self.mao.remove(var)
        return var
    
    def maoJS(self):
        return  {"cartas": [i.valorBT for i in self.mao] }


    def conecta_jogadores(self):
        pass

    def descartaBT(self, carta):
        for i in range(len(self.mao)):
            if self.mao[i].valorBT == carta:
                indice = i
        carta = self.mao[indice]
        self.mao.remove(carta)
        
        return carta